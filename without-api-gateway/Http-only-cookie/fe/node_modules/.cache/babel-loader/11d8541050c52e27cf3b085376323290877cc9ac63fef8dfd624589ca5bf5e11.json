{"ast":null,"code":"'use strict';\n\nconst {\n  HEX\n} = require('./scopedChars');\nfunction normalizeIPv4(host) {\n  if (findToken(host, '.') < 3) {\n    return {\n      host,\n      isIPV4: false\n    };\n  }\n  const matches = host.match(/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/u) || [];\n  const [address] = matches;\n  if (address) {\n    return {\n      host: stripLeadingZeros(address, '.'),\n      isIPV4: true\n    };\n  } else {\n    return {\n      host,\n      isIPV4: false\n    };\n  }\n}\n\n/**\n * @param {string[]} input\n * @param {boolean} [keepZero=false]\n * @returns {string|undefined}\n */\nfunction stringArrayToHexStripped(input, keepZero = false) {\n  let acc = '';\n  let strip = true;\n  for (const c of input) {\n    if (HEX[c] === undefined) return undefined;\n    if (c !== '0' && strip === true) strip = false;\n    if (!strip) acc += c;\n  }\n  if (keepZero && acc.length === 0) acc = '0';\n  return acc;\n}\nfunction getIPV6(input) {\n  let tokenCount = 0;\n  const output = {\n    error: false,\n    address: '',\n    zone: ''\n  };\n  const address = [];\n  const buffer = [];\n  let isZone = false;\n  let endipv6Encountered = false;\n  let endIpv6 = false;\n  function consume() {\n    if (buffer.length) {\n      if (isZone === false) {\n        const hex = stringArrayToHexStripped(buffer);\n        if (hex !== undefined) {\n          address.push(hex);\n        } else {\n          output.error = true;\n          return false;\n        }\n      }\n      buffer.length = 0;\n    }\n    return true;\n  }\n  for (let i = 0; i < input.length; i++) {\n    const cursor = input[i];\n    if (cursor === '[' || cursor === ']') {\n      continue;\n    }\n    if (cursor === ':') {\n      if (endipv6Encountered === true) {\n        endIpv6 = true;\n      }\n      if (!consume()) {\n        break;\n      }\n      tokenCount++;\n      address.push(':');\n      if (tokenCount > 7) {\n        // not valid\n        output.error = true;\n        break;\n      }\n      if (i - 1 >= 0 && input[i - 1] === ':') {\n        endipv6Encountered = true;\n      }\n      continue;\n    } else if (cursor === '%') {\n      if (!consume()) {\n        break;\n      }\n      // switch to zone detection\n      isZone = true;\n    } else {\n      buffer.push(cursor);\n      continue;\n    }\n  }\n  if (buffer.length) {\n    if (isZone) {\n      output.zone = buffer.join('');\n    } else if (endIpv6) {\n      address.push(buffer.join(''));\n    } else {\n      address.push(stringArrayToHexStripped(buffer));\n    }\n  }\n  output.address = address.join('');\n  return output;\n}\nfunction normalizeIPv6(host, opts = {}) {\n  if (findToken(host, ':') < 2) {\n    return {\n      host,\n      isIPV6: false\n    };\n  }\n  const ipv6 = getIPV6(host);\n  if (!ipv6.error) {\n    let newHost = ipv6.address;\n    let escapedHost = ipv6.address;\n    if (ipv6.zone) {\n      newHost += '%' + ipv6.zone;\n      escapedHost += '%25' + ipv6.zone;\n    }\n    return {\n      host: newHost,\n      escapedHost,\n      isIPV6: true\n    };\n  } else {\n    return {\n      host,\n      isIPV6: false\n    };\n  }\n}\nfunction stripLeadingZeros(str, token) {\n  let out = '';\n  let skip = true;\n  const l = str.length;\n  for (let i = 0; i < l; i++) {\n    const c = str[i];\n    if (c === '0' && skip) {\n      if (i + 1 <= l && str[i + 1] === token || i + 1 === l) {\n        out += c;\n        skip = false;\n      }\n    } else {\n      if (c === token) {\n        skip = true;\n      } else {\n        skip = false;\n      }\n      out += c;\n    }\n  }\n  return out;\n}\nfunction findToken(str, token) {\n  let ind = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === token) ind++;\n  }\n  return ind;\n}\nconst RDS1 = /^\\.\\.?\\//u;\nconst RDS2 = /^\\/\\.(?:\\/|$)/u;\nconst RDS3 = /^\\/\\.\\.(?:\\/|$)/u;\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/u;\nfunction removeDotSegments(input) {\n  const output = [];\n  while (input.length) {\n    if (input.match(RDS1)) {\n      input = input.replace(RDS1, '');\n    } else if (input.match(RDS2)) {\n      input = input.replace(RDS2, '/');\n    } else if (input.match(RDS3)) {\n      input = input.replace(RDS3, '/');\n      output.pop();\n    } else if (input === '.' || input === '..') {\n      input = '';\n    } else {\n      const im = input.match(RDS5);\n      if (im) {\n        const s = im[0];\n        input = input.slice(s.length);\n        output.push(s);\n      } else {\n        throw new Error('Unexpected dot segment condition');\n      }\n    }\n  }\n  return output.join('');\n}\nfunction normalizeComponentEncoding(components, esc) {\n  const func = esc !== true ? escape : unescape;\n  if (components.scheme !== undefined) {\n    components.scheme = func(components.scheme);\n  }\n  if (components.userinfo !== undefined) {\n    components.userinfo = func(components.userinfo);\n  }\n  if (components.host !== undefined) {\n    components.host = func(components.host);\n  }\n  if (components.path !== undefined) {\n    components.path = func(components.path);\n  }\n  if (components.query !== undefined) {\n    components.query = func(components.query);\n  }\n  if (components.fragment !== undefined) {\n    components.fragment = func(components.fragment);\n  }\n  return components;\n}\nfunction recomposeAuthority(components, options) {\n  const uriTokens = [];\n  if (components.userinfo !== undefined) {\n    uriTokens.push(components.userinfo);\n    uriTokens.push('@');\n  }\n  if (components.host !== undefined) {\n    let host = unescape(components.host);\n    const ipV4res = normalizeIPv4(host);\n    if (ipV4res.isIPV4) {\n      host = ipV4res.host;\n    } else {\n      const ipV6res = normalizeIPv6(ipV4res.host, {\n        isIPV4: false\n      });\n      if (ipV6res.isIPV6 === true) {\n        host = `[${ipV6res.escapedHost}]`;\n      } else {\n        host = components.host;\n      }\n    }\n    uriTokens.push(host);\n  }\n  if (typeof components.port === 'number' || typeof components.port === 'string') {\n    uriTokens.push(':');\n    uriTokens.push(String(components.port));\n  }\n  return uriTokens.length ? uriTokens.join('') : undefined;\n}\n;\nmodule.exports = {\n  recomposeAuthority,\n  normalizeComponentEncoding,\n  removeDotSegments,\n  normalizeIPv4,\n  normalizeIPv6,\n  stringArrayToHexStripped\n};","map":{"version":3,"names":["HEX","require","normalizeIPv4","host","findToken","isIPV4","matches","match","address","stripLeadingZeros","stringArrayToHexStripped","input","keepZero","acc","strip","c","undefined","length","getIPV6","tokenCount","output","error","zone","buffer","isZone","endipv6Encountered","endIpv6","consume","hex","push","i","cursor","join","normalizeIPv6","opts","isIPV6","ipv6","newHost","escapedHost","str","token","out","skip","l","ind","RDS1","RDS2","RDS3","RDS5","removeDotSegments","replace","pop","im","s","slice","Error","normalizeComponentEncoding","components","esc","func","escape","unescape","scheme","userinfo","path","query","fragment","recomposeAuthority","options","uriTokens","ipV4res","ipV6res","port","String","module","exports"],"sources":["/Users/mukunthan/Projects/htx/oath_test/Http-only-cookie/fe/node_modules/fast-uri/lib/utils.js"],"sourcesContent":["'use strict'\n\nconst { HEX } = require('./scopedChars')\n\nfunction normalizeIPv4 (host) {\n  if (findToken(host, '.') < 3) { return { host, isIPV4: false } }\n  const matches = host.match(/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/u) || []\n  const [address] = matches\n  if (address) {\n    return { host: stripLeadingZeros(address, '.'), isIPV4: true }\n  } else {\n    return { host, isIPV4: false }\n  }\n}\n\n/**\n * @param {string[]} input\n * @param {boolean} [keepZero=false]\n * @returns {string|undefined}\n */\nfunction stringArrayToHexStripped (input, keepZero = false) {\n  let acc = ''\n  let strip = true\n  for (const c of input) {\n    if (HEX[c] === undefined) return undefined\n    if (c !== '0' && strip === true) strip = false\n    if (!strip) acc += c\n  }\n  if (keepZero && acc.length === 0) acc = '0'\n  return acc\n}\n\nfunction getIPV6 (input) {\n  let tokenCount = 0\n  const output = { error: false, address: '', zone: '' }\n  const address = []\n  const buffer = []\n  let isZone = false\n  let endipv6Encountered = false\n  let endIpv6 = false\n\n  function consume () {\n    if (buffer.length) {\n      if (isZone === false) {\n        const hex = stringArrayToHexStripped(buffer)\n        if (hex !== undefined) {\n          address.push(hex)\n        } else {\n          output.error = true\n          return false\n        }\n      }\n      buffer.length = 0\n    }\n    return true\n  }\n\n  for (let i = 0; i < input.length; i++) {\n    const cursor = input[i]\n    if (cursor === '[' || cursor === ']') { continue }\n    if (cursor === ':') {\n      if (endipv6Encountered === true) {\n        endIpv6 = true\n      }\n      if (!consume()) { break }\n      tokenCount++\n      address.push(':')\n      if (tokenCount > 7) {\n        // not valid\n        output.error = true\n        break\n      }\n      if (i - 1 >= 0 && input[i - 1] === ':') {\n        endipv6Encountered = true\n      }\n      continue\n    } else if (cursor === '%') {\n      if (!consume()) { break }\n      // switch to zone detection\n      isZone = true\n    } else {\n      buffer.push(cursor)\n      continue\n    }\n  }\n  if (buffer.length) {\n    if (isZone) {\n      output.zone = buffer.join('')\n    } else if (endIpv6) {\n      address.push(buffer.join(''))\n    } else {\n      address.push(stringArrayToHexStripped(buffer))\n    }\n  }\n  output.address = address.join('')\n  return output\n}\n\nfunction normalizeIPv6 (host, opts = {}) {\n  if (findToken(host, ':') < 2) { return { host, isIPV6: false } }\n  const ipv6 = getIPV6(host)\n\n  if (!ipv6.error) {\n    let newHost = ipv6.address\n    let escapedHost = ipv6.address\n    if (ipv6.zone) {\n      newHost += '%' + ipv6.zone\n      escapedHost += '%25' + ipv6.zone\n    }\n    return { host: newHost, escapedHost, isIPV6: true }\n  } else {\n    return { host, isIPV6: false }\n  }\n}\n\nfunction stripLeadingZeros (str, token) {\n  let out = ''\n  let skip = true\n  const l = str.length\n  for (let i = 0; i < l; i++) {\n    const c = str[i]\n    if (c === '0' && skip) {\n      if ((i + 1 <= l && str[i + 1] === token) || i + 1 === l) {\n        out += c\n        skip = false\n      }\n    } else {\n      if (c === token) {\n        skip = true\n      } else {\n        skip = false\n      }\n      out += c\n    }\n  }\n  return out\n}\n\nfunction findToken (str, token) {\n  let ind = 0\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === token) ind++\n  }\n  return ind\n}\n\nconst RDS1 = /^\\.\\.?\\//u\nconst RDS2 = /^\\/\\.(?:\\/|$)/u\nconst RDS3 = /^\\/\\.\\.(?:\\/|$)/u\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/u\n\nfunction removeDotSegments (input) {\n  const output = []\n\n  while (input.length) {\n    if (input.match(RDS1)) {\n      input = input.replace(RDS1, '')\n    } else if (input.match(RDS2)) {\n      input = input.replace(RDS2, '/')\n    } else if (input.match(RDS3)) {\n      input = input.replace(RDS3, '/')\n      output.pop()\n    } else if (input === '.' || input === '..') {\n      input = ''\n    } else {\n      const im = input.match(RDS5)\n      if (im) {\n        const s = im[0]\n        input = input.slice(s.length)\n        output.push(s)\n      } else {\n        throw new Error('Unexpected dot segment condition')\n      }\n    }\n  }\n  return output.join('')\n}\n\nfunction normalizeComponentEncoding (components, esc) {\n  const func = esc !== true ? escape : unescape\n  if (components.scheme !== undefined) {\n    components.scheme = func(components.scheme)\n  }\n  if (components.userinfo !== undefined) {\n    components.userinfo = func(components.userinfo)\n  }\n  if (components.host !== undefined) {\n    components.host = func(components.host)\n  }\n  if (components.path !== undefined) {\n    components.path = func(components.path)\n  }\n  if (components.query !== undefined) {\n    components.query = func(components.query)\n  }\n  if (components.fragment !== undefined) {\n    components.fragment = func(components.fragment)\n  }\n  return components\n}\n\nfunction recomposeAuthority (components, options) {\n  const uriTokens = []\n\n  if (components.userinfo !== undefined) {\n    uriTokens.push(components.userinfo)\n    uriTokens.push('@')\n  }\n\n  if (components.host !== undefined) {\n    let host = unescape(components.host)\n    const ipV4res = normalizeIPv4(host)\n\n    if (ipV4res.isIPV4) {\n      host = ipV4res.host\n    } else {\n      const ipV6res = normalizeIPv6(ipV4res.host, { isIPV4: false })\n      if (ipV6res.isIPV6 === true) {\n        host = `[${ipV6res.escapedHost}]`\n      } else {\n        host = components.host\n      }\n    }\n    uriTokens.push(host)\n  }\n\n  if (typeof components.port === 'number' || typeof components.port === 'string') {\n    uriTokens.push(':')\n    uriTokens.push(String(components.port))\n  }\n\n  return uriTokens.length ? uriTokens.join('') : undefined\n};\n\nmodule.exports = {\n  recomposeAuthority,\n  normalizeComponentEncoding,\n  removeDotSegments,\n  normalizeIPv4,\n  normalizeIPv6,\n  stringArrayToHexStripped\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}